Problems fixed in 3.1
=====================

 DOM:
   - H312-009 Write prints extra white-spaces at the end of elements when
     pretty printing

Problems fixed in 2.3
=====================

  - Out-of-order notation declaration in DTD (2006-10-16)
    A notation doesn't have to be declared before its first use in a DTD,
    it can be declared later on. XML/Ada didn't support this
  - FA16-002 Accept xml:lang attribute in <schema> node (2006-10-16)
    The above attribute should be allowed in this node
  - F830-012: Character after <DOCTYPE SYSTEM "..."> is discarded.
  - F822-009: Schema and attributeGroup
    Using the "ref" attribute for <attributeGroup> is not supported correctly,
    since XML/Ada will complain that the group is referenced but never defined
  - F822-009: Schema: <attributeGroup> cannot contain another <attributeGroup>
  - F814-001: Schema
    When a .xsd file has already been parsed (for instance through an <import>
    tag), and you parse it explicitly through a call to Parse, an error is
    raised. XML/Ada should not try to parse it a second time.
  - F614-003: Storage_Error is raised when you free an XML_Grammar you have
    stored in your application, since it has already been freed automatically
    by XML/Ada. It is now possible to free the same grammar multiple times

Problems fixed in 2.2
=====================

  - Schema: Restrictions or extensions of type did not validate the facets of
    their ancestors. For instance, if you set minLength on a type, and then set
    a restriction on it also limiting the maxLength, XML/Ada no longer checked
    the minLength
  - Fixed all memory leaks reported by valgrind when running the automatic
    testsuite. This testsuites parses more than 2000 different XML files, both
    in validation and not validation mode, using external entities
    sometimes,... and should therefore indicate that there are no remaining
    memory leaks in XML/Ada
  - F505-022: Dom.Core.Nodes.Print fix on the handling of namespaces

Problems fixed in 2.1
=====================

Input Soures:
  - Ignore encoding specified in the XML file if it conflicts with the
    Byte Order Mark at the beginning of the file
SAX
  - XML/Ada doesn't check that ENTITY or ENTITIES attributes only refer to
    existing unparsed entities
  - Disabling the Namespace_Feature doesn't accepts colons in tag names, but
    it should
  - Validity errors are reported as fatal errors, but they should be reported
    as recoverable errors
  - Extra validity checks added for attributes (contents of ID attributes,...)
  - The Sax callback Error must raise an exception, otherwise some other
    internal errors might occur in the parser. This is unexpected, since this
    callback indicates recoverable errors
  - Attribute values are normalized too often (space sequences collapsing).
    If the space is given through a character reference, it shouldn't be
    collapsed

Problems in 2.0.1, Fixed in 2.1
===============================

- Expanding parameter entities should always surround them with spaces, as per
  4.4.8 in the XML specifications
- Fixes various issues when validating documents
- EA03-006: Setting attribute for an element not added to the tree results in
  a Constraint_Error (Workaround: disable shared strings in dom-core.ads)
- Validating a not well-formed document results in an validation error instead
  of a well-formedness error. It is therefore harder to understand such error
  messages
- E908-010: importing the same schema twice generates an error
- E908-011: incorrect handling of elementFormDefault, when the child node
  belongs to a namespace different than the parent's namespace
- E908-011: incorrect handling of elementFormDefault when a schema included
  with <include> has a setup different than the including file
- Attributes normalization done even if the attribute's type is CDATA. However,
  according to 3.3.3 in the XML standard, space sequences should be left
  untouched in such a case

Problems in 2.0
===============

- E307-011: Invalid project file for xmlada_schema.gpr when installing static
  libraries

Problems fixed in 2.0
=====================

- DB25-005 Incorrect value returned by DOM.Attributes.Owner_Element
- D714-002 Attribute quotes are no longer present in a processing-instruction
  data, in SAX or DOM
- Constraint_Error raised when an external entity doesn't reference an
  existing file
- D213-012: Constraint_Error when using the same parser twice
- SAX: End_Document() is called even in case of a fatal error
- DOM: There is now initially a single Text node per block of text, as required
  by DOM specifications
- DOM: Missing function DOM.Core.Nodes.Node_Type added
- CC01-006: In some cases, the handling of entities like &amp; results in
  duplicates when getting the Node_Value through DOM
- CC01-002: Handling of big files (multi-mega bytes) was generating a
  Storage_Error in Direct_IO.

