## The type of library we want to build. Possible values:
##   relocatable
##   static
LIBRARY_TYPE=relocatable

# Replace with the location for the installation directory
INSTALL=@INSTALL@
PACKAGE_TARNAME=@PACKAGE_TARNAME@
VERSION=@PACKAGE_VERSION@
prefix=@prefix@
exec_prefix=@exec_prefix@
datadir=@datadir@
datarootdir=@datarootdir@
bindir=@bindir@
libdir=@libdir@
xmllib=${libdir}/xmlada/${LIBRARY_TYPE}/
docdir=@docdir@
includedir=@includedir@

GNATMAKE=gnatmake
CC=gcc

# Compiler mode: one of "distrib", "debug", "optimize", "profile"
MODE=distrib

# Commands for installation procedure
CHMOD=chmod
LN_S=@LN_S@
MKDIR=@MKDIR@

# In some cases, we use cp instead of install for doing the installation,
# since the latter does not support installing multiple files at once.
CP=cp -p

#########################################################################
## Nothing to modify below this point
#########################################################################

MODULES=unicode input_sources sax dom schema
MODULE_INSTALL=${MODULES:%=%_inst}

MAKE_ARGS=-XMODE=${MODE} -XLIBRARY_TYPE=${LIBRARY_TYPE}

.PHONY: all obj clean install install_dirs

all: obj
static:
	${MAKE} LIBRARY_TYPE=static
shared relocatable:
	${MAKE} LIBRARY_TYPE=relocatable

obj: force
	${GNATMAKE} -Punicode/unicode.gpr ${MAKE_ARGS}
	${GNATMAKE} -Pinput_sources/input_sources.gpr ${MAKE_ARGS}
	${GNATMAKE} -Psax/sax.gpr ${MAKE_ARGS}
	${GNATMAKE} -Pdom/dom.gpr ${MAKE_ARGS}
	${GNATMAKE} -Pschema/schema.gpr ${MAKE_ARGS}

test: force
	${GNATMAKE} -Punicode/test/unicode_test.gpr ${MAKE_ARGS}
	${GNATMAKE} -Psax/test/sax_test.gpr ${MAKE_ARGS}
	${GNATMAKE} -Pdom/test/dom_test.gpr ${MAKE_ARGS}
	${GNATMAKE} -Pschema/test/schema_test.gpr ${MAKE_ARGS}

run_test: force
	@cd unicode/test; ./test_unicode
	@make --no-print-directory -C dom/test tests
	@make --no-print-directory -C schema/test tests
run_test_valgrind: test
	cd dom/test; valgrind --tool=memcheck --leak-check=full ./testxml -auto

docs: force
	-${MAKE} -e -C docs all_check

# Rule for installing the modules
%_inst: force
	${CP} $*/*.ad[bs]        ${includedir}/xmlada
	cd $*; ls *.ad[bs] > ${libdir}/gnat/xmlada/xmlada_$*.lgpr
	-cd ${xmllib}; ${CHMOD} ugo+w *.ali
	-${CP} $*/lib/${LIBRARY_TYPE}/*.ali   ${xmllib}
	${RM} ${libdir}/libxmlada_$**
	${RM} ${xmllib}libxmlada_$**
ifeq (${LIBRARY_TYPE},static)
	${INSTALL} $*/lib/${LIBRARY_TYPE}/libxmlada_$*.a ${xmllib}
else
ifeq (${OS},Windows_NT)
	${INSTALL} $*/lib/${LIBRARY_TYPE}/xmlada_$*.dll ${xmllib}
	${INSTALL} $*/lib/${LIBRARY_TYPE}/xmlada_$*.dll ${xmllib}libxmlada.dll
else
	${INSTALL} $*/lib/${LIBRARY_TYPE}/libxmlada_$*.so.${VERSION} ${xmllib}
	cd ${xmllib}; ${LN_S} libxmlada_$*.so.${VERSION} libxmlada_$*.so
	cd ${libdir}; ${LN_S} xmlada/${LIBRARY_TYPE}/libxmlada_$*.so.${VERSION} libxmlada_$*.so
	cd ${libdir}; ${LN_S} xmlada/${LIBRARY_TYPE}/libxmlada_$*.so.${VERSION} libxmlada_$*.so.${basename ${VERSION}}
	cd ${libdir}; ${LN_S} xmlada/${LIBRARY_TYPE}/libxmlada_$*.so.${VERSION} libxmlada_$*.so.${VERSION}
endif
endif
	cd ${xmllib}; ${CHMOD} ugo-w *.ali

install_dirs: force
	@${MKDIR} ${bindir}
	@${MKDIR} ${xmllib}
	@${MKDIR} ${libdir}/gnat/xmlada
	@${MKDIR} ${datadir}/doc/xmlada
	@${MKDIR} ${includedir}/xmlada
	@${MKDIR} ${datadir}/gps/plug-ins/

install: obj install_dirs ${MODULE_INSTALL}
	${INSTALL} distrib/${LIBRARY_TYPE}/xmlada_shared.gpr ${libdir}/gnat
	${INSTALL} distrib/xmlada.gpr                ${libdir}/gnat/
	${INSTALL} distrib/xmlada_dom.gpr            ${libdir}/gnat/
	${INSTALL} distrib/xmlada_sax.gpr            ${libdir}/gnat/
	${INSTALL} distrib/xmlada_input.gpr          ${libdir}/gnat/
	${INSTALL} distrib/xmlada_schema.gpr         ${libdir}/gnat/
	${INSTALL} distrib/xmlada_unicode.gpr        ${libdir}/gnat/
	${INSTALL} xmlada-config  ${bindir}
	-${INSTALL} docs/xml.ps   ${datadir}/doc/xmlada 2>/dev/null
	-${INSTALL} docs/xml.pdf  ${datadir}/doc/xmlada
	-${INSTALL} docs/xml.html ${datadir}/doc/xmlada
	-${INSTALL} docs/xml.info ${datadir}/doc/xmlada
	${CHMOD} +x ${bindir}/xmlada-config
	${INSTALL} distrib/xmlada_gps.py ${datadir}/gps/plug-ins/
install_static: 
	${MAKE} LIBRARY_TYPE=static install
install_shared install_relocatable:
	${MAKE} LIBRARY_TYPE=relocatable install

clean: force
	gnat clean -q -r -Punicode/unicode.gpr
	gnat clean -q -r -Pinput_sources/input_sources.gpr
	gnat clean -q -r -Psax/sax.gpr
	gnat clean -q -r -Pdom/dom.gpr
	gnat clean -q -r -Pschema/schema.gpr
	gnat clean -q -Punicode/test/unicode_test.gpr
	gnat clean -q -Pdom/test/dom_test.gpr
	gnat clean -q -Psax/test/sax_test.gpr
	gnat clean -q -Pschema/test/schema_test.gpr
	cd docs; ${MAKE} -e clean

distclean: clean
	${RM} dom/test/default.gpr
	${RM} Makefile config.cache config.log config.status Makefile.314

force:
